---

esphome:
  name: atrium
  platform: ESP8266
  board: nodemcuv2
  includes:
    - arlec_switch.h
  libraries:
    - "rc-switch"

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password

# Enable logging
logger:

# Enable Home Assistant API
api:
 password: !secret api_password

# Enable OTA
ota:
 password: !secret api_password

remote_receiver:
  pin: D1
  dump: rc_switch

  # Settings to optimize recognition of RF devices
  # tolerance: 50%
  # filter: 250us
  # idle: 4ms
  # buffer_size: 1kb

# remote_transmitter:
#   pin: D2
#   carrier_duty_percent: 100%

  

# Individual switches
switch:
  - platform: custom
    lambda: |-
      unsigned long code_on = 3456767700; // "011001110000010100001011011010100"
      unsigned long code_off = 3456767190; // "011001110000010100001010011010110"
      auto arlec_switch = new ArlecSwitch(4, code_on, code_off, 33, 1);
      App.register_component(arlec_switch);
      return {arlec_switch};

    switches:
      name: "atrium"

  # - platform: template
  #   name: "atrium"
  #   optimistic: true
  #   turn_on_action:
  #     remote_transmitter.transmit_rc_switch_raw:
  #       code: '011001110000010100001101011011000'
  #       protocol: 1
  #       repeat: 5
    
  #   turn_off_action:
  #     remote_transmitter.transmit_rc_switch_raw:
  #       code: '011001110000010100001100011011010'
  #       protocol: 1
  #       repeat: 5

  # - platform: template
  #   name: "C"
  #   optimistic: true
  #   turn_on_action:
  #     remote_transmitter.transmit_rc_switch_raw:
  #       code: '0110011100000101000010110110101000'
  #             # 011001110000010100001011011010100
  #       protocol: 1
  #       repeat: 5
    
  #   turn_off_action:
  #     remote_transmitter.transmit_rc_switch_raw:
  #       code: '0110011100000101000010100110101100'
  #             # 011001110000010100001010011010110
  #       protocol: 1
  #       repeat: 5